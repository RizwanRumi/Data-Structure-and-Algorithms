
# run time analysis for Worst-Case Big-O Notation

Task 0:  worst case will be O(1) because of directly retrieving first and last records using index.

Task 1:
    for first loop : O(n)
    for second loop : O(n)

    total = O(2n)

    worst case will be O(n)

Task 2:
    for loop : O(n)
    for nested loop : O(n*n)
    for max() : O(n)

    total = O(2n)+ O(n*n) => O(n(2+n))

    worst case will be O(n*n)

Task 3:
    for 1st loop : O(n)
    for sort : O(n log(n))
    for 2nd loop : O(n)
    for 3rd loop : O(n)

    total = O(3n) + O(n log(n))

    worst case will be O(n log(n)) because O(n log(n)) is a superset of O(n)


Task 4:
    for 1st loop : O(n)
    for 2nd loop : O(n)
    for 3rd loop : O(n)
    for sort : O(n log(n))
    for 4th loop : O(n)

    total = O(4n) + O(n log(n))

    worst case will be O(n log(n)) because O(n log(n)) is a superset of O(n)


